{"version":3,"file":"soaa-ng2-ui-auth.js.map","sources":["ng://@soaa/ng2-ui-auth/lib/utils.ts","ng://@soaa/ng2-ui-auth/lib/config-providers.ts","ng://@soaa/ng2-ui-auth/lib/storage-type.enum.ts","ng://@soaa/ng2-ui-auth/lib/config.service.ts","ng://@soaa/ng2-ui-auth/lib/storage-service.ts","ng://@soaa/ng2-ui-auth/lib/browser-storage.service.ts","ng://@soaa/ng2-ui-auth/lib/token.refresh.service.ts","ng://@soaa/ng2-ui-auth/lib/shared.service.ts","ng://@soaa/ng2-ui-auth/lib/interceptor.service.ts","ng://@soaa/ng2-ui-auth/lib/popup.service.ts","ng://@soaa/ng2-ui-auth/lib/oauth1.service.ts","ng://@soaa/ng2-ui-auth/lib/oauth2.service.ts","ng://@soaa/ng2-ui-auth/lib/oauth.service.ts","ng://@soaa/ng2-ui-auth/lib/local.service.ts","ng://@soaa/ng2-ui-auth/lib/auth.service.ts","ng://@soaa/ng2-ui-auth/lib/ng2-ui-auth.module.ts"],"sourcesContent":["import { HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\nexport function joinUrl(baseUrl: string, url: string) {\n  if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\n    return url;\n  }\n\n  const joined = [baseUrl, url].join('/');\n\n  return joined\n    .replace(/[\\/]+/g, '/')\n    .replace(/\\/\\?/g, '?')\n    .replace(/\\/\\#/g, '#')\n    .replace(/\\:\\//g, '://');\n}\n\nexport function buildQueryString(obj: object) {\n  return Object.keys(obj)\n    .map(key => (!!obj[key] ? `${encodeURIComponent(key)}=${encodeURIComponent(obj[key])}` : key))\n    .join('&');\n}\n\nexport function getWindowOrigin(w?: Window) {\n  if (!w && typeof window !== 'undefined') {\n    w = window;\n  }\n  try {\n    if (!w || !w.location) {\n      return null;\n    }\n    if (!w.location.origin) {\n      return `${w.location.protocol}//${w.location.hostname}${w.location.port ? ':' + w.location.port : ''}`;\n    }\n    return w.location.origin;\n  } catch (error) {\n    return null;\n    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\n    // error instanceof DOMException && error.name === 'SecurityError'\n  }\n}\n","import { getWindowOrigin } from './utils';\nimport { IProviders } from '../public_api';\n\nexport const defaultProviders: IProviders = {\n  facebook: {\n    name: 'facebook',\n    url: '/auth/facebook',\n    redirectUri: `${getWindowOrigin()}/`,\n    authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n    additionalUrlParams: {\n      display: 'popup'\n    },\n    scope: ['email'],\n    scopeDelimiter: ',',\n    oauthType: '2.0',\n    popupOptions: { width: 580, height: 400 }\n  },\n  google: {\n    name: 'google',\n    url: '/auth/google',\n    authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\n    additionalUrlParams: {\n      display: 'popup',\n      prompt: undefined,\n      login_hint: undefined,\n      access_type: undefined,\n      include_granted_scopes: undefined,\n      'openid.realm': undefined,\n      hd: undefined\n    },\n    scope: ['openid', 'profile', 'email'],\n    scopeDelimiter: ' ',\n    oauthType: '2.0',\n    popupOptions: { width: 452, height: 633 },\n    state: () =>\n      encodeURIComponent(\n        Math.random()\n          .toString(36)\n          .substr(2)\n      )\n  },\n  github: {\n    name: 'github',\n    url: '/auth/github',\n    authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n    scope: ['user:email'],\n    scopeDelimiter: ' ',\n    oauthType: '2.0',\n    popupOptions: { width: 1020, height: 618 }\n  },\n  instagram: {\n    name: 'instagram',\n    url: '/auth/instagram',\n    authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\n    scope: ['basic'],\n    scopeDelimiter: '+',\n    oauthType: '2.0'\n  },\n  linkedin: {\n    name: 'linkedin',\n    url: '/auth/linkedin',\n    authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\n    scope: ['r_emailaddress'],\n    scopeDelimiter: ' ',\n    oauthType: '2.0',\n    popupOptions: { width: 527, height: 582 },\n    state: 'STATE'\n  },\n  twitter: {\n    name: 'twitter',\n    url: '/auth/twitter',\n    authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\n    oauthType: '1.0',\n    popupOptions: { width: 495, height: 645 }\n  },\n  twitch: {\n    name: 'twitch',\n    url: '/auth/twitch',\n    authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\n    scope: ['user_read'],\n    scopeDelimiter: ' ',\n    additionalUrlParams: {\n      display: 'popup'\n    },\n    oauthType: '2.0',\n    popupOptions: { width: 500, height: 560 }\n  },\n  live: {\n    name: 'live',\n    url: '/auth/live',\n    authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\n    additionalUrlParams: {\n      display: 'popup'\n    },\n    scope: ['wl.emails'],\n    scopeDelimiter: ' ',\n    oauthType: '2.0',\n    popupOptions: { width: 500, height: 560 }\n  },\n  yahoo: {\n    name: 'yahoo',\n    url: '/auth/yahoo',\n    authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\n    scope: [],\n    scopeDelimiter: ',',\n    oauthType: '2.0',\n    popupOptions: { width: 559, height: 519 }\n  },\n  bitbucket: {\n    name: 'bitbucket',\n    url: '/auth/bitbucket',\n    authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\n    redirectUri: `${getWindowOrigin()}/`,\n    scope: ['email'],\n    scopeDelimiter: ',',\n    oauthType: '2.0',\n    popupOptions: { width: 1028, height: 529 }\n  },\n  spotify: {\n    name: 'spotify',\n    url: '/auth/spotify',\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    scope: ['', 'user-read-email'],\n    scopeDelimiter: ',',\n    oauthType: '2.0',\n    popupOptions: { width: 500, height: 530 },\n    state: () =>\n      encodeURIComponent(\n        Math.random()\n          .toString(36)\n          .substr(2)\n      )\n  }\n};\n","export enum StorageType {\n  NONE = 'none',\n  MEMORY = 'memory',\n  LOCAL_STORAGE = 'localStorage',\n  SESSION_STORAGE = 'sessionStorage',\n  COOKIE = 'cookie',\n  SESSION_COOKIE = 'sessionCookie'\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport {IConfigOptions, IPartialConfigOptions, IProviders, Tokens} from './config-interfaces';\nimport { defaultProviders } from './config-providers';\nimport { StorageType } from './storage-type.enum';\n\nexport const CONFIG_OPTIONS = new InjectionToken<any>('config.options');\n@Injectable()\nexport class ConfigService {\n  public options  = {\n    withCredentials: false,\n    tokenRoot: null,\n    baseUrl: '/',\n    loginUrl: '/auth/login',\n    signupUrl: '/auth/signup',\n    unlinkUrl: '/auth/unlink/',\n    tokenName: 'token',\n    refreshTokenName: 'refresh_token',\n    tokenSeparator: '_',\n    tokenPrefix: 'ng2-ui-auth',\n    authHeader: 'Authorization',\n    authToken: 'Bearer',\n    storageType: StorageType.LOCAL_STORAGE,\n    cordova: undefined,\n    resolveToken: (response: any, config: IConfigOptions) => {\n      const accessToken: string | { [key: string]: string } | null | undefined =\n        response && (response.access_token || response.token || response.data);\n      if (!accessToken) {\n        // console.warn('No token found');\n        return null;\n      }\n      if (typeof accessToken === 'string') {\n        // tslint:disable-next-line:no-shadowed-variable\n        const refreshToken = response[config.refreshTokenName];\n        return <Tokens>{ accessToken: accessToken, refreshToken: refreshToken };\n      }\n      if (typeof accessToken !== 'object') {\n        // console.warn('No token found');\n        return null;\n      }\n      const tokenRootData =\n        config.tokenRoot &&\n        config.tokenRoot.split('.').reduce((o: any, x: any) => {\n          return o[x];\n        }, accessToken);\n      const token = tokenRootData ? tokenRootData[config.tokenName] : accessToken[config.tokenName];\n      const refreshToken = tokenRootData ? tokenRootData[config.refreshTokenName] : accessToken[config.refreshTokenName];\n\n      if (token) {\n        return <Tokens>{ accessToken: token, refreshToken: refreshToken };\n      }\n\n      // const tokenPath = this.tokenRoot ? this.tokenRoot + '.' + this.tokenName : this.tokenName;\n      // console.warn('Expecting a token named \"' + tokenPath);\n      return null;\n    },\n    providers: {}\n  };\n\n  constructor(@Inject(CONFIG_OPTIONS) options: IPartialConfigOptions) {\n    this.options = {\n      ...this.options,\n      ...options\n    };\n    this.mergeWithDefaultProviders();\n  }\n\n  updateProviders(providers: IProviders) {\n    this.options.providers = {\n      ...(this.options.providers || {}),\n      ...providers\n    };\n    this.mergeWithDefaultProviders();\n  }\n\n  mergeWithDefaultProviders() {\n    Object.keys(this.options.providers).forEach(key => {\n      if (key in defaultProviders) {\n        this.options.providers[key] = {\n          ...defaultProviders[key],\n          ...this.options.providers[key]\n        };\n      }\n    });\n  }\n}\n","import { StorageType } from './storage-type.enum';\n\nexport abstract class StorageService {\n  abstract updateStorageType(storageType: StorageType): boolean;\n\n  abstract async get(key: string): Promise<string>;\n\n  abstract async set(key: string, value: string, date: string): Promise<void>;\n\n  abstract async remove(key: string): Promise<void>;\n}\n","import { Injectable } from '@angular/core';\nimport { StorageService } from './storage-service';\nimport { StorageType } from './storage-type.enum';\nimport { ConfigService } from './config.service';\n\n@Injectable()\nexport class BrowserStorageService extends StorageService {\n  private store: { [key: string]: string } = {};\n  private storageType = StorageType.MEMORY;\n\n  constructor(private config: ConfigService) {\n    super();\n    if (!this.updateStorageType(config.options.storageType)) {\n      console.warn(config.options.storageType + ' is not available.');\n    }\n  }\n\n  public updateStorageType(storageType: StorageType) {\n    const isStorageAvailable = this.checkIsStorageAvailable(storageType);\n    if (!isStorageAvailable) {\n      return false;\n    }\n    this.storageType = storageType;\n    return true;\n  }\n\n  public async get(key: string) {\n    switch (this.storageType) {\n      case StorageType.COOKIE:\n      case StorageType.SESSION_COOKIE:\n        return Promise.resolve(this.getCookie(key));\n      case StorageType.LOCAL_STORAGE:\n      case StorageType.SESSION_STORAGE:\n        return Promise.resolve(window[this.storageType].getItem(key));\n      case StorageType.MEMORY:\n        return Promise.resolve(this.store[key]);\n      case StorageType.NONE:\n      default:\n        return Promise.resolve(null);\n    }\n  }\n\n  public async set(key: string, value: string, date: string) {\n    switch (this.storageType) {\n      case StorageType.COOKIE:\n      case StorageType.SESSION_COOKIE:\n        this.setCookie(key, value, this.storageType === StorageType.COOKIE ? date : '');\n        break;\n      case StorageType.LOCAL_STORAGE:\n      case StorageType.SESSION_STORAGE:\n        window[this.storageType].setItem(key, value);\n        break;\n      case StorageType.MEMORY:\n        this.store[key] = value;\n        break;\n      case StorageType.NONE:\n      default:\n        break;\n    }\n  }\n\n  public async remove(key: string) {\n    switch (this.storageType) {\n      case StorageType.COOKIE:\n      case StorageType.SESSION_COOKIE:\n        this.removeCookie(key);\n        break;\n      case StorageType.LOCAL_STORAGE:\n      case StorageType.SESSION_STORAGE:\n        window[this.storageType].removeItem(key);\n        break;\n      case StorageType.MEMORY:\n        delete this.store[key];\n        break;\n      case StorageType.NONE:\n      default:\n        break;\n    }\n  }\n\n  private checkIsStorageAvailable(storageType: StorageType) {\n    switch (storageType) {\n      case StorageType.COOKIE:\n      case StorageType.SESSION_COOKIE:\n        return this.isCookieStorageAvailable();\n      case StorageType.LOCAL_STORAGE:\n      case StorageType.SESSION_STORAGE:\n        return this.isWindowStorageAvailable(storageType);\n      case StorageType.NONE:\n      case StorageType.MEMORY:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  private isWindowStorageAvailable(storageType: StorageType.SESSION_STORAGE | StorageType.LOCAL_STORAGE) {\n    try {\n      const supported = window && storageType in window && window[storageType] !== null;\n\n      if (supported) {\n        const key = Math.random()\n          .toString(36)\n          .substring(7);\n        window[storageType].setItem(key, '');\n        window[storageType].removeItem(key);\n      }\n\n      return supported;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  private isCookieStorageAvailable() {\n    try {\n      const supported = document && 'cookie' in document;\n\n      if (supported) {\n        const key = Math.random()\n          .toString(36)\n          .substring(7);\n        this.setCookie(key, 'test', new Date(Date.now() + 60 * 1000).toUTCString());\n        const value = this.getCookie(key);\n        this.removeCookie(key);\n        return value === 'test';\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  private setCookie(key: string, value: string, expires = '', path = '/') {\n    document.cookie = `${key}=${value}${expires ? `; expires=${expires}` : ''}; path=${path}`;\n  }\n\n  private removeCookie(key: string, path = '/') {\n    this.setCookie(key, '', new Date(0).toUTCString(), path);\n  }\n\n  private getCookie(key: string) {\n    return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\\\s*)${key}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`), '$1');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {EMPTY, Observable, of} from 'rxjs';\n\n@Injectable()\nexport class TokenRefreshService  {\n\n  requestTokenRefresh<T extends object | string = any>(refreshToken: string): Observable<T> {\n    return EMPTY;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { StorageType } from './storage-type.enum';\nimport { Subscriber, Observable } from 'rxjs';\nimport { StorageService } from './storage-service';\nimport { ConfigService } from './config.service';\nimport {Tokens} from './config-interfaces';\nimport {TokenRefreshService} from './token.refresh.service';\n\n@Injectable()\nexport class SharedService {\n  public tokenName = this.config.options.tokenPrefix\n    ? [this.config.options.tokenPrefix, this.config.options.tokenName].join(this.config.options.tokenSeparator)\n    : this.config.options.tokenName;\n  public refreshTokenName = this.config.options.tokenPrefix\n    ? [this.config.options.tokenPrefix, this.config.options.refreshTokenName].join(this.config.options.tokenSeparator)\n    : this.config.options.refreshTokenName;\n\n\n  constructor(private storage: StorageService, private config: ConfigService, private tokenRefreshService: TokenRefreshService) {}\n\n  public async getRefreshToken() {\n    return await this.storage.get(this.refreshTokenName);\n  }\n\n  public async getToken() {\n    return await this.storage.get(this.tokenName);\n  }\n\n  public async getPayload(token?: string) {\n    if (!token) {\n      token = await this.getToken();\n    }\n\n    if (token && token.split('.').length === 3) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        return JSON.parse(this.b64DecodeUnicode(base64));\n      } catch (e) {\n        return undefined;\n      }\n    }\n  }\n\n  public async setToken(response: string | object):Promise<Tokens> {\n    if (!response) {\n      // console.warn('Can\\'t set token without passing a value');\n      return null;\n    }\n\n    let tokens: Tokens;\n    if (typeof response === 'string') {\n      tokens = {accessToken: response};\n    } else {\n      tokens = this.config.options.resolveToken(response, this.config.options);\n    }\n\n    if (tokens.accessToken) {\n      const expDate = await this.getExpirationDate(tokens.accessToken);\n      await this.storage.set(this.tokenName, tokens.accessToken, expDate ? expDate.toUTCString() : '');\n    }\n\n    if (tokens.refreshToken) {\n      const expDate = await this.getExpirationDate(tokens.refreshToken);\n      await this.storage.set(this.refreshTokenName, tokens.refreshToken, expDate ? expDate.toUTCString() : '');\n    }\n\n    return tokens;\n  }\n\n  public async removeToken() {\n    await this.storage.remove(this.tokenName);\n  }\n\n  public async isAuthenticated(token?: string) {\n    if (!token) {\n      token = await this.getToken();\n    }\n\n    // a token is present\n    if (token) {\n      if (this.isValidToken(token)) {\n        return true;\n      }\n\n      const refreshToken = await this.getRefreshToken();\n      if (refreshToken) {\n        if (this.isValidToken(refreshToken)) {\n          const response = await this.tokenRefreshService.requestTokenRefresh(refreshToken).toPromise();\n          const tokens = await this.setToken(response);\n\n          return tokens && this.isValidToken(tokens.accessToken);\n        }\n\n        await this.storage.remove(this.refreshTokenName);\n      }\n\n      await this.storage.remove(this.tokenName);\n    }\n\n    return false;\n  }\n\n  isValidToken(token: string): boolean {\n    // token with a valid JWT format XXX.YYY.ZZZ\n    if (token.split('.').length === 3) {\n      // could be a valid JWT or an access token with the same format\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const exp = JSON.parse(this.b64DecodeUnicode(base64)).exp;\n        // jwt with an optional expiration claims\n        if (exp) {\n          const isExpired = Math.round(new Date().getTime() / 1000) >= exp;\n          return !isExpired;\n        }\n      } catch (e) {\n        // pass: Non-JWT token that looks like JWT\n        return true;\n      }\n    }\n    // pass: All other tokens\n    return true;\n  }\n\n  public async getExpirationDate(token?: string) {\n    if (!token) {\n      token = await this.getToken();\n    }\n\n    const payload = await this.getPayload(token);\n    if (payload && payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\n      const date = new Date(0);\n      date.setUTCSeconds(payload.exp);\n      return date;\n    }\n    return null;\n  }\n\n  public logout(): Observable<any> {\n    return Observable.create(async (observer: Subscriber<any>) => {\n      await this.storage.remove(this.tokenName);\n      observer.next();\n      observer.complete();\n    });\n  }\n\n  public setStorageType(type: StorageType) {\n    return this.storage.updateStorageType(type);\n  }\n\n  private b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(atob(str), c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { SharedService } from './shared.service';\nimport { ConfigService } from './config.service';\nimport {from, Observable} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  constructor(private shared: SharedService, private config: ConfigService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const { authHeader, authToken } = this.config.options;\n\n    return from(Promise.all([this.shared.getToken(), this.shared.isAuthenticated()]))\n      .pipe(\n        switchMap((auth) => {\n          const token = auth[0];\n          const isAuthenticated = auth[1];\n\n          const newReq =\n            isAuthenticated && !req.headers.has(authHeader) ? req.clone({setHeaders: {[authHeader]: `${authToken} ${token}`}}) : req;\n          return next.handle(newReq);\n        })\n      );\n  }\n}\n","/* tslint:disable:no-shadowed-variable */\nimport { Injectable } from '@angular/core';\nimport { empty, fromEvent, interval, merge, Observable, of, throwError } from 'rxjs';\nimport { delay, map, switchMap, take } from 'rxjs/operators';\nimport { IOauth1Options, IOauth2Options, IPopupOptions } from './config-interfaces';\nimport { getWindowOrigin } from './utils';\n\ndeclare const cordova: any;\n@Injectable()\nexport class PopupService {\n  public open(url: string, options: IOauth2Options | IOauth1Options, cordova = this.isCordovaApp()) {\n    const stringifiedOptions = this.stringifyOptions(this.prepareOptions(options.popupOptions));\n    const windowName = cordova ? '_blank' : options.name;\n\n    const popupWindow = typeof window !== 'undefined' ? window.open(url, windowName, stringifiedOptions) : null;\n\n    if (popupWindow) {\n      if (popupWindow.focus) {\n        popupWindow.focus();\n      }\n      return of(popupWindow);\n    }\n    return empty();\n  }\n\n  public waitForClose(popupWindow: Window, cordova = this.isCordovaApp(), redirectUri = getWindowOrigin()) {\n    return cordova ? this.eventListener(popupWindow, redirectUri) : this.pollPopup(popupWindow, redirectUri);\n  }\n\n  private eventListener(popupWindow: Window, redirectUri = getWindowOrigin()) {\n    if (!popupWindow) {\n      throw new Error('Popup was not created');\n    }\n    return merge(\n      fromEvent<Event>(popupWindow, 'exit').pipe(\n        delay(100),\n        map(() => {\n          throw new Error('Authentication Canceled');\n        })\n      ),\n      fromEvent(popupWindow, 'loadstart')\n    ).pipe(\n      switchMap((event: Event & { url: string }) => {\n        if (!popupWindow || popupWindow.closed) {\n          return Observable.throw(new Error('Authentication Canceled'));\n        }\n        if (event.url.indexOf(redirectUri) !== 0) {\n          return empty();\n        }\n\n        const parser = document.createElement('a');\n        parser.href = event.url;\n\n        if (parser.search || parser.hash) {\n          const queryParams = parser.search.substring(1).replace(/\\/$/, '');\n          const hashParams = parser.hash.substring(1).replace(/\\/$/, '');\n          const hash = this.parseQueryString(hashParams);\n          const qs = this.parseQueryString(queryParams);\n          const allParams = { ...qs, ...hash };\n\n          popupWindow.close();\n\n          if (allParams.error) {\n            throw allParams.error;\n          } else {\n            return of(allParams);\n          }\n        }\n        return empty();\n      }),\n      take(1)\n    );\n  }\n\n  private pollPopup(popupWindow: Window, redirectUri = getWindowOrigin()) {\n    return interval(50).pipe(\n      switchMap(() => {\n        if (!popupWindow || popupWindow.closed) {\n          return throwError(new Error('Authentication Canceled'));\n        }\n\n        const popupWindowOrigin = getWindowOrigin(popupWindow);\n\n        if (\n          popupWindowOrigin &&\n          (redirectUri.indexOf(popupWindowOrigin) === 0 || popupWindowOrigin.indexOf(redirectUri) === 0) &&\n          (popupWindow.location.search || popupWindow.location.hash)\n        ) {\n          const queryParams = popupWindow.location.search.substring(1).replace(/\\/$/, '');\n          const hashParams = popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\n          const hash = this.parseQueryString(hashParams);\n          const qs = this.parseQueryString(queryParams);\n          popupWindow.close();\n          const allParams = { ...qs, ...hash };\n          if (allParams.error) {\n            throw allParams.error;\n          } else {\n            return of(allParams);\n          }\n        }\n        return empty();\n      }),\n      take(1)\n    );\n  }\n\n  private prepareOptions(options?: IPopupOptions) {\n    options = options || {};\n    const width = options.width || 500;\n    const height = options.height || 500;\n    return {\n      width,\n      height,\n      left: window.screenX + (window.outerWidth - width) / 2,\n      top: window.screenY + (window.outerHeight - height) / 2.5,\n      toolbar: options.visibleToolbar ? 'yes' : 'no',\n      ...options\n    };\n  }\n\n  private stringifyOptions(options: { [index: string]: string | number | boolean | null | undefined }) {\n    return Object.keys(options)\n      .map(key => (options[key] === null || options[key] === undefined ? key : key + '=' + options[key]))\n      .join(',');\n  }\n\n  private parseQueryString(joinedKeyValue: string): any {\n    let key;\n    let value;\n    return joinedKeyValue.split('&').reduce(\n      (obj, keyValue) => {\n        if (keyValue) {\n          value = keyValue.split('=');\n          key = decodeURIComponent(value[0]);\n          obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\n        }\n        return obj;\n      },\n      {} as { [k: string]: string | true }\n    );\n  }\n\n  private isCordovaApp() {\n    return typeof cordova === 'object' || (document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { IOauth1Options } from './config-interfaces';\nimport { ConfigService } from './config.service';\nimport { IOauthService } from './oauth-service';\nimport { PopupService } from './popup.service';\nimport { buildQueryString, joinUrl } from './utils';\n\n@Injectable()\nexport class Oauth1Service implements IOauthService {\n  constructor(protected http: HttpClient, protected popup: PopupService, protected config: ConfigService) {}\n\n  open<T extends object | string = any>(oauthOptions: IOauth1Options, userData: object): Observable<T> {\n    const serverUrl = this.config.options.baseUrl ? joinUrl(this.config.options.baseUrl, oauthOptions.url) : oauthOptions.url;\n    return this.popup.open('about:blank', oauthOptions, this.config.options.cordova).pipe(\n      switchMap(popupWindow =>\n        this.http.post<object>(serverUrl, oauthOptions).pipe(\n          tap(authorizationData =>\n            popupWindow\n              ? popupWindow.location.replace([oauthOptions.authorizationEndpoint, buildQueryString(authorizationData)].join('?'))\n              : undefined\n          ),\n          switchMap(authorizationData =>\n            this.popup\n              .waitForClose(popupWindow, this.config.options.cordova, oauthOptions.redirectUri)\n              .pipe(map(oauthData => ({ authorizationData, oauthData })))\n          )\n        )\n      ),\n      switchMap(({ authorizationData, oauthData }) => this.exchangeForToken<T>(oauthOptions, authorizationData, oauthData, userData))\n    );\n  }\n\n  protected exchangeForToken<T>(oauthOptions: IOauth1Options, authorizationData: object, oauthData: object, userData: object) {\n    const body = { oauthOptions, authorizationData, oauthData, userData };\n    const { withCredentials, baseUrl } = this.config.options;\n    const { method = 'POST', url } = oauthOptions;\n    const exchangeForTokenUrl = baseUrl ? joinUrl(baseUrl, url) : url;\n    return this.http.request<T>(method, exchangeForTokenUrl, { body, withCredentials });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { empty, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { IOauth2Options } from './config-interfaces';\nimport { ConfigService } from './config.service';\nimport { IOauthService } from './oauth-service';\nimport { PopupService } from './popup.service';\nimport { buildQueryString, getWindowOrigin, joinUrl } from './utils';\n\n@Injectable()\nexport class Oauth2Service implements IOauthService {\n  constructor(protected http: HttpClient, protected popup: PopupService, protected config: ConfigService) {}\n\n  open<T extends object | string = any>(oauthOptions: IOauth2Options, userData: object): Observable<T> {\n    const authorizationData = this.getAuthorizationData(oauthOptions);\n    const url = [oauthOptions.authorizationEndpoint, buildQueryString(authorizationData)].join('?');\n    return this.popup.open(url, oauthOptions, this.config.options.cordova).pipe(\n      switchMap((window?: Window) =>\n        window ? this.popup.waitForClose(window, this.config.options.cordova, oauthOptions.redirectUri) : empty()\n      ),\n      switchMap((oauthData: any) => {\n        // when no server URL provided, return popup params as-is.\n        // this is for a scenario when someone wishes to opt out from\n        // satellizer's magic by doing authorization code exchange and\n        // saving a token manually.\n        if (oauthOptions.responseType === 'token' || !oauthOptions.url) {\n          return of(oauthData);\n        }\n\n        if (oauthData.state && oauthData.state !== authorizationData.state) {\n          throw new Error('OAuth \"state\" mismatch');\n        }\n        return this.exchangeForToken<T>(oauthOptions, authorizationData, oauthData, userData);\n      })\n    );\n  }\n\n  protected exchangeForToken<T>(options: IOauth2Options, authorizationData: object, oauthData: object, userData: object) {\n    const body = { authorizationData, oauthData, userData };\n    const { baseUrl, withCredentials } = this.config.options;\n    const { url, method = 'POST' } = options;\n    const exchangeForTokenUrl = baseUrl ? joinUrl(baseUrl, url) : url;\n    return this.http.request<T>(method, exchangeForTokenUrl, { body, withCredentials });\n  }\n\n  protected getAuthorizationData(options: IOauth2Options) {\n    const {\n      responseType = 'code',\n      clientId,\n      redirectUri = getWindowOrigin() || '',\n      scopeDelimiter = ',',\n      scope,\n      state,\n      additionalUrlParams\n    } = options;\n    const resolvedState = typeof state === 'function' ? state() : state;\n    return [\n      ['response_type', responseType],\n      ['client_id', clientId],\n      ['redirect_uri', redirectUri],\n      ...(state ? [['state', resolvedState]] : []),\n      ...(scope ? [['scope', scope.join(scopeDelimiter)]] : []),\n      ...(additionalUrlParams\n        ? Object.keys(additionalUrlParams).map(key => {\n            const value: string | (() => string) | null | undefined = (additionalUrlParams as any)[key];\n            if (typeof value === 'string') {\n              return [key, value];\n            } else if (typeof value === 'function') {\n              return [key, value()];\n            } else if (value === null) {\n              return [key, ''];\n            }\n            return ['', ''];\n          })\n        : [])\n    ]\n      .filter(_ => !!_[0])\n      .reduce((acc, next) => ({ ...acc, [next[0]]: next[1] }), {} as { [key: string]: string });\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { joinUrl } from './utils';\nimport {mapTo, switchMap, switchMapTo, tap} from 'rxjs/operators';\nimport { Oauth1Service } from './oauth1.service';\nimport { Oauth2Service } from './oauth2.service';\nimport {from, Observable, of} from 'rxjs';\nimport { PopupService } from './popup.service';\nimport { ConfigService } from './config.service';\nimport { SharedService } from './shared.service';\nimport { HttpClient } from '@angular/common/http';\nimport { IOauthService } from './oauth-service';\n\n@Injectable()\nexport class OauthService {\n  protected readonly depProviders = [\n    { provide: HttpClient, useValue: this.http },\n    { provide: PopupService, useValue: this.popup },\n    { provide: ConfigService, useValue: this.config }\n  ];\n  protected readonly deps = [HttpClient, PopupService, ConfigService];\n\n  constructor(protected http: HttpClient, protected shared: SharedService, protected config: ConfigService, protected popup: PopupService) {}\n\n  public authenticate<T extends object | string>(name: string, userData?: any): Observable<T> {\n    const provider: IOauthService = this.providerOf(name);\n\n    return provider.open<T>(this.config.options.providers[name], userData || {}).pipe(\n      switchMap(response => {\n        // this is for a scenario when someone wishes to opt out from\n        // satellizer's magic by doing authorization code exchange and\n        // saving a token manually.\n        if (this.config.options.providers[name].url) {\n          return from(this.shared.setToken(response)).pipe(mapTo(response));\n        }\n\n        return of(response);\n      })\n    );\n  }\n\n  protected providerOf(name: string): IOauthService {\n    return this.config.options.providers[name].oauthType === '1.0'\n      ? Injector.create({ providers: [...this.depProviders, { provide: Oauth1Service, deps: this.deps }] }).get(Oauth1Service)\n      : Injector.create({ providers: [...this.depProviders, { provide: Oauth2Service, deps: this.deps }] }).get(Oauth2Service);\n  }\n\n  public unlink<T>(provider: string, url = joinUrl(this.config.options.baseUrl, this.config.options.unlinkUrl), method = 'POST') {\n    return this.http.request<T>(method, url, { body: { provider } });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from './shared.service';\nimport { ConfigService } from './config.service';\nimport { joinUrl } from './utils';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LocalService {\n  constructor(private http: HttpClient, private shared: SharedService, private config: ConfigService) {}\n\n  public login<T extends string | object>(user: string | object, url?: string): Observable<T> {\n    return this.http\n      .post<T>(url || joinUrl(this.config.options.baseUrl, this.config.options.loginUrl), user)\n      .pipe(tap(data => this.shared.setToken(data)));\n  }\n\n  public signup<T = any>(user: string | object, url?: string): Observable<T> {\n    return this.http.post<T>(url || joinUrl(this.config.options.baseUrl, this.config.options.signupUrl), user);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalService } from './local.service';\nimport { OauthService } from './oauth.service';\nimport { SharedService } from './shared.service';\nimport { StorageType } from './storage-type.enum';\n\n@Injectable()\nexport class AuthService {\n  constructor(private shared: SharedService, private local: LocalService, private oauth: OauthService) {}\n\n  public login<T extends string | object = any>(user: string | object, url?: string): Observable<T> {\n    return this.local.login<T>(user, url);\n  }\n\n  public signup<T = any>(user: string | object, url?: string): Observable<T> {\n    return this.local.signup<T>(user, url);\n  }\n\n  public logout(): Observable<void> {\n    return this.shared.logout();\n  }\n\n  public authenticate<T extends object | string = any>(name: string, userData?: any): Observable<T> {\n    return this.oauth.authenticate<T>(name, userData);\n  }\n\n  public link<T extends object | string = any>(name: string, userData?: any): Observable<T> {\n    return this.oauth.authenticate<T>(name, userData);\n  }\n\n  public unlink<T = any>(provider: string, url?: string): Observable<T> {\n    return this.oauth.unlink<T>(provider, url);\n  }\n\n  public async isAuthenticated(): Promise<boolean> {\n    return await this.shared.isAuthenticated();\n  }\n\n  public async getToken(): Promise<string | null> {\n    return await this.shared.getToken();\n  }\n\n  public async setToken(token: string | object): Promise<void> {\n    await this.shared.setToken(token);\n  }\n\n  public async removeToken(): Promise<void> {\n    await this.shared.removeToken();\n  }\n\n  public async getPayload(): Promise<any> {\n    return await this.shared.getPayload();\n  }\n\n  public async setStorageType(type: StorageType): Promise<boolean> {\n    return await this.shared.setStorageType(type);\n  }\n\n  public async getExpirationDate(): Promise<Date | null> {\n    return await this.shared.getExpirationDate();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { IConfigOptions, IPartialConfigOptions } from './config-interfaces';\nimport { CONFIG_OPTIONS, ConfigService } from './config.service';\nimport { StorageService } from './storage-service';\nimport { BrowserStorageService } from './browser-storage.service';\nimport { SharedService } from './shared.service';\nimport { JwtInterceptor } from './interceptor.service';\nimport { OauthService } from './oauth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { PopupService } from './popup.service';\nimport { LocalService } from './local.service';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [],\n  exports: []\n})\nexport class Ng2UiAuthModule {\n  static forRoot(configOptions?: IPartialConfigOptions, defaultJwtInterceptor = true): ModuleWithProviders {\n    return {\n      ngModule: Ng2UiAuthModule,\n      providers: [\n        ...(configOptions ? [{ provide: CONFIG_OPTIONS, useValue: configOptions }] : []),\n        { provide: ConfigService, useClass: ConfigService, deps: [CONFIG_OPTIONS] },\n        { provide: StorageService, useClass: BrowserStorageService, deps: [ConfigService] },\n        { provide: SharedService, useClass: SharedService, deps: [StorageService, ConfigService] },\n        { provide: LocalService, useClass: LocalService, deps: [HttpClient, SharedService, ConfigService] },\n        { provide: PopupService, useClass: PopupService, deps: [ConfigService] },\n        { provide: OauthService, useClass: OauthService, deps: [HttpClient, SharedService, ConfigService, PopupService] },\n        { provide: AuthService, useClass: AuthService, deps: [SharedService, LocalService, OauthService] },\n        ...(defaultJwtInterceptor\n          ? [{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true, deps: [SharedService, ConfigService] }]\n          : [])\n      ]\n    };\n  }\n}\n"],"names":["tslib_1.__extends","tslib_1.__spread"],"mappings":"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"}
